{"version":3,"sources":["fonts/Ladi-Gross.otf","fonts/Ladi-Weak.otf","fonts/Ladi-Dense.otf","fonts/fonts.js","Header.js","Chain.js","BlobMouse.js","ThreeScene.js","Underlay.js","App.js","reportWebVitals.js","index.js"],"names":["createGlobalStyle","LadiGross","LadiWeak","LadiDense","HeaderBlob","vec","THREE","props","useState","hidden","setVisible","viewport","useThree","headerOrigin","x","height","y","z","originScalar","set","useBox","type","dynamic","mass","angularDamping","linearDamping","args","width","position","ref","api","useEffect","subscribe","p","applyForce","sub","normalize","multiplyScalar","toArray","repeatX","repeatY","base","useLoader","wrapS","wrapT","repeat","bump","ao","normal","rough","RoundedBox","radius","smoothness","MeshDistortMaterial","distort","map","color","bumpMap","aoMap","normalMap","roughness","roughnessMap","transmission","Html","style","opacity","transform","fontFamily","maxWidth","distanceFactor","occlude","onOcclude","text","Header","parent","createContext","createRef","Handle","useSphere","useFrame","mouse","Provider","value","children","ChainLink","parentRef","useContext","chainSize","Math","random","useConeTwistConstraint","pivotA","pivotB","axisA","axisB","twistAngle","angle","PI","constraintApi","childNum","totalTeeth","console","log","size","activeTeeth","fbx","disable","object","clone","scale","Pointer","useFBX","setActiveTeeth","setTimeout","texture","useTexture","emissiveMap","clearcoatRoughnessMap","castShadow","receiveShadow","speed","envMapIntensity","clearcoat","clearcoatRoughness","emissive","sheen","BlobMouse","mushies","Array","floor","Mushy","useCompoundBody","shapes","setScalar","mushyOrigin","ScrollContainer","scroll","group","useRef","state","delta","current","damp","class","ThreeScene","scrollRef","onCreated","events","connect","raycaster","computeOffsets","offsetX","clientX","offsetY","clientY","fallback","intensity","penumbra","gravity","iterations","broadphase","i","teethCount","setTeethCount","onScroll","e","target","scrollTop","scrollHeight","clientHeight","className","pointerEvents","Grid","styled","div","Left","Right","Sub","Jumbo","Underlay","App","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11ecd5fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Ladi-Gross.ff1391b7.otf\";","export default __webpack_public_path__ + \"static/media/Ladi-Weak.ed726be1.otf\";","export default __webpack_public_path__ + \"static/media/Ladi-Dense.8dffd513.otf\";","import { createGlobalStyle } from 'styled-components'\n\nimport LadiGross from './Ladi-Gross.otf';\nimport LadiWeak from './Ladi-Weak.otf';\nimport LadiDense from './Ladi-Dense.otf';\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'Ladi Gross';\n        src: url(${LadiGross}) format(\"opentype\");\n        font-weight: 300;\n        font-style: normal;\n    }\n    @font-face {\n        font-family: 'Ladi Weak';\n        src: url(${LadiWeak}) format(\"opentype\");\n        font-weight: 300;\n        font-style: normal;\n    }\n    @font-face {\n        font-family: 'Ladi Dense';\n        src: url(${LadiDense}) format(\"opentype\");\n        font-weight: 300;\n        font-style: normal;\n    }\n`;","import { Suspense, useState, useEffect, useRef } from 'react'\nimport * as THREE from \"three\"\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\nimport { useLoader, useThree } from '@react-three/fiber'\nimport { RoundedBox, MeshDistortMaterial, Html, useTexture } from '@react-three/drei'\nimport { Physics, usePlane, useSphere, useBox, useCompoundBody } from \"@react-three/cannon\"\nimport lerp from \"lerp\"\n\nfunction HeaderBlob({ vec = new THREE.Vector3(), ...props }) {\n  const [hidden, setVisible] = useState(false)\n  const { viewport } = useThree()\n  const headerOrigin = [props.x, viewport.height/2-props.y, props.z];\n  const originScalar = new THREE.Vector3().set(...headerOrigin);\n\n  const [ref, api] = useBox(() => ({ type: props.dynamic? 'Dynamic' : 'Static', mass: 1000, angularDamping: 0.2, linearDamping: 0.95, args: [props.width, props.height, 0.1], position: headerOrigin }))\n  useEffect(() => api.position.subscribe((p) => api.applyForce(vec.set(...p).sub(originScalar).normalize().multiplyScalar(-1000).toArray(), [0, 0, 0])), [api])\n\n  const repeatX = 0.25;\n  const repeatY = 0.25;\n\n  const base = useLoader(THREE.TextureLoader, \"layered-fungus-ue/layered-fungus1_albedo.png\");\n  base.wrapS = THREE.RepeatWrapping;\n  base.wrapT = THREE.RepeatWrapping;\n  base.repeat.set(repeatX, repeatY);\n\n  const bump = useLoader(THREE.TextureLoader, \"layered-fungus-ue/layered-fungus1_height.png\");\n  bump.wrapS = THREE.RepeatWrapping;\n  bump.wrapT = THREE.RepeatWrapping;\n  bump.repeat.set(repeatX, repeatY);\n\n  const ao = useLoader(THREE.TextureLoader, \"layered-fungus-ue/layered-fungus1_ao.png\");\n  ao.wrapS = THREE.RepeatWrapping;\n  ao.wrapT = THREE.RepeatWrapping;\n  ao.repeat.set(repeatX, repeatY);\n\n  const normal = useLoader(THREE.TextureLoader, \"layered-fungus-ue/layered-fungus1_normal-dx.png\");\n  normal.wrapS = THREE.RepeatWrapping;\n  normal.wrapT = THREE.RepeatWrapping;\n  normal.repeat.set(repeatX, repeatY);\n\n  const rough = useLoader(THREE.TextureLoader, \"layered-fungus-ue/layered-fungus1_roughness.png\");\n  rough.wrapS = THREE.RepeatWrapping;\n  rough.wrapT = THREE.RepeatWrapping;\n  rough.repeat.set(repeatX, repeatY);\n\n  return (\n    <RoundedBox ref={ref} radius={0.5} smoothness={4} args={[props.width, props.height, 0.1]} >\n      <MeshDistortMaterial\n        distort={0.15}\n        map={base}\n        color={\"black\"}\n        bumpMap={bump}\n        aoMap={ao}\n        normalMap={normal}\n        roughness={0.4}\n        roughnessMap={rough}\n        transmission={0.8}\n      />\n      <Html\n        style={{\n          // transition: 'all 0.2s',\n          opacity: hidden ? 0 : 1,\n          transform: `scale(5)`,\n          color: `#ff7777`,\n          // opacity: 0.5,\n          fontFamily: 'Ladi Gross',\n          maxWidth: '200px'\n        }}\n        distanceFactor={1.5}\n        position={[0, 0, 0.6]}\n        transform\n        occlude\n        onOcclude={setVisible}>\n        <span>{props.text}</span>\n        {/* <Slider style={{ width: 100 }} min={0.5} max={1} step={0.01} value={size} onChange={set} /> */}\n      </Html>\n    </RoundedBox>\n  )\n}\n\nexport default function Header() {\n  const { viewport } = useThree()\n  return (\n    <>\n      <HeaderBlob text={\"THIS IS THE HEADER OF A TEETH WEBSITE\"} dynamic={true} x={0} y={1} z={0} width={viewport.width / 1.1} height={2}/>\n      <HeaderBlob text={\"IM AFRAID OF TEETH\"} x={-4} y={2} z={-10} width={30} height={20}/>\n      <HeaderBlob text={\"TEETH TEETH THEETH TEEH ETEEH\"} x={3} y={3} z={-3} width={4} height={6}/>\n      <HeaderBlob text={\"WHY ARE TEETH SO FUCKING CREEPY\"} x={5} y={3} z={-3} width={10} height={20}/>\n      <HeaderBlob text={\"HOW MANY TEETH DO YOU HAVE\"} dynamic={true} x={-5} y={5} z={1} width={15} height={2}/>\n      <HeaderBlob text={\"ARE YOU AFRAID OF TEETH\"} x={-1} y={3} z={-1} width={5} height={5}/>\n      <HeaderBlob text={\"WHY ARE TEETH SO FUCKING CREEPY\"} x={5} y={3} z={-1} width={20} height={20}/>\n    </>\n  )\n}\n","import { createContext, createRef, forwardRef, useState, useContext, useEffect } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { useSphere, useBox, useConeTwistConstraint } from '@react-three/cannon'\nimport { useFBX } from '@react-three/drei'\n\nconst parent = createContext(createRef())\n\nconst Handle = (props) => {\n  const [ref, { position }] = useSphere(() => ({ \n    type: 'Static', \n    args: [0.1], \n    position: [0, 0, 0] , \n    // onCollide: () => {\n    //   props.dropTooth()\n    // }\n  }))\n\n  useFrame(({ mouse: { x, y }, viewport: { height, width } }) =>\n    position.set((x * width) / 2, (y * height) / 2, 0),\n  )\n  return (\n    <group>\n      <mesh ref={ref}>\n        <sphereBufferGeometry args={[props.radius, 64, 64]} />\n        <meshStandardMaterial />\n      </mesh>\n      <parent.Provider value={ref}>{props.children}</parent.Provider>\n    </group>\n  )\n}\n\nconst ChainLink = (props) => {\n  const parentRef = useContext(parent)\n  const chainSize = [0.1, Math.random() / 3 + 0.2, 0.1]\n  const [ref] = useBox(() => ({\n    mass: 1,\n    linearDamping: 0.8,\n    args: chainSize,\n  }))\n\n  const [, , constraintApi] = useConeTwistConstraint(parentRef, ref, {\n    pivotA: [0, -chainSize[1] / 2, 0],\n    pivotB: [0, chainSize[1] / 2, 0],\n    axisA: [0, 1, 0],\n    axisB: [0, 1, 0],\n    twistAngle: 0,\n    angle: Math.PI / 8,\n  })\n\n  let children;\n  if (props.childNum < props.totalTeeth) {\n    console.log(\"child change\")\n    children = <ChainLink \n                size={props.size * 0.95} \n                childNum={props.childNum + 1} \n                activeTeeth={props.activeTeeth} \n                totalTeeth={props.totalTeeth} \n                fbx={props.fbx}/>\n  }\n\n  useEffect(() => {\n    if (props.childNum == props.activeTeeth) {\n      constraintApi.disable()\n    }\n  }, [props.activeTeeth])\n\n  return (\n    <>\n      <mesh ref={ref}>\n        <primitive ref={ref} object={props.fbx.clone()} scale={props.size} />\n        <meshStandardMaterial />\n      </mesh>\n      <parent.Provider value={ref}>{children}</parent.Provider>\n    </>\n  )\n}\n\nconst Pointer = (props) => {\n  const fbx = useFBX(\"tooth.fbx\");\n\n  const totalTeeth = 5;\n  const [activeTeeth, setActiveTeeth] = useState(totalTeeth)\n\n  // useEffect(() => void setTimeout(() => setActiveTeeth(activeTeeth - 1), 2000), [activeTeeth])\n  useEffect(() => void setTimeout(() => {\n    if(activeTeeth > 2){\n      setActiveTeeth(activeTeeth - 1)\n    }\n  }, 5000), [activeTeeth])\n\n  // useEffect(() => {\n  //   setActiveTeeth(activeTeeth)\n  // }, [activeTeeth])\n\n  // console.log(\"b4\", activeTeeth);\n  // setActiveTeeth(activeTeeth - 1)\n  // console.log(\"after\", activeTeeth);\n\n  return (\n    <Handle \n      radius={0.07} \n      // dropTooth={() => {\n      //   setActiveTeeth((activeTeeth) => (activeTeeth - 1))\n      // }}\n    >\n      <ChainLink fbx={fbx} size={0.002} childNum={1} activeTeeth={activeTeeth} totalTeeth={totalTeeth}/>\n    </Handle>\n  )\n}\n\nexport default Pointer","import * as THREE from \"three\"\nimport { createContext, createRef, forwardRef, useState, useContext, useEffect } from 'react'\nimport { useThree, useFrame } from '@react-three/fiber'\nimport { useSphere, useBox, useConeTwistConstraint } from '@react-three/cannon'\nimport { useTexture, MeshDistortMaterial } from '@react-three/drei'\n\nconst parent = createContext(createRef())\n\nfunction Handle({ vec = new THREE.Vector3(), ...props }) {\n  const { viewport } = useThree()\n\n  const [ref, api] = useBox(() => ({ mass: 100, angularDamping: 0.2, linearDamping: 0.95, args: [3, 3, 3], position: [0,0,0] }))\n\n  const [mousePosition, setMousePosition] = useState(new THREE.Vector3().set([0,0,0]))\n\n  useFrame(({ mouse: { x, y }, viewport: { height, width } }) => {\n    // setMousePosition([(x * width) / 2,(y * height) / 2,0])\n    // console.log(mousePosition)\n    api.position.set((x * width) / 2, (y * height) / 2 - height, 0, 1000)\n\n    // const currentPosition = ref.current.position\n    // const mousePosition = new THREE.Vector3().set(x, y, 0)\n    // const force = mousePosition.sub(currentPosition).multiplyScalar(1)\n    // api.applyImpulse(force.toArray(), [0,0,0])\n    // api.applyForce(currentPosition.sub(mousePosition).normalize().multiplyScalar(-50).toArray(), [0, 0, 0])\n    \n  })\n  // useEffect(() => {\n  //   api.position.subscribe((p) => {\n  //     console.log(\"mousePosition later\", mousePosition)\n  //     api.applyForce(vec.set(...p).sub(mousePosition).normalize().multiplyScalar(-1).toArray(), [0, 0, 0])\n  //   })\n  // }, [api])\n\n  // useEffect(() => api.position.subscribe((p) => api.applyForce(vec.set(...p).sub(mousePosition).normalize().multiplyScalar(-1).toArray(), [0, 0, 0])), [api])\n\n  const texture = useTexture({\n    bumpMap: 'Moss002_1K_Displacement.jpg',\n    emissiveMap: 'Moss002_1K_Displacement.jpg',\n    clearcoatRoughnessMap: 'Moss002_1K_Displacement.jpg',\n  })\n\n  return (\n    <mesh castShadow receiveShadow ref={ref} scale={0.2}>\n      <sphereGeometry />\n      <MeshDistortMaterial\n        distort={0.7}\n        speed={1}\n        color={\"black\"}\n        envMapIntensity={0.4}\n        clearcoat={0.9}\n        clearcoatRoughness={0}\n        transmission={0.8}\n        emissive={\"black\"}\n        sheen={1}\n        {...texture} />\n    </mesh>\n\n  // return (\n  //   <group>\n  //     <mesh ref={ref}>\n  //       <sphereBufferGeometry args={[props.radius, 64, 64]} />\n  //       <meshStandardMaterial />\n  //     </mesh>\n  //     {/* <parent.Provider value={ref}>{props.children}</parent.Provider> */}\n  //   </group>\n  )\n}\n\n\nconst BlobMouse = (props) => {\n\n  return (\n    <Handle radius={0.07} />\n  )\n}\n\nexport default BlobMouse","import { Suspense, useState, useEffect, useRef } from 'react'\nimport * as THREE from \"three\"\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { MeshDistortMaterial, MeshWobbleMaterial, Html, useTexture } from '@react-three/drei'\nimport { Physics, usePlane, useSphere, useBox, useCompoundBody } from \"@react-three/cannon\"\nimport lerp from \"lerp\"\nimport './styles.css'\n\nimport Header from './Header';\nimport Tooth from './Tooth'\nimport Pointer from './Chain'\nimport BlobMouse from './BlobMouse'\n\nconst mushies = [...Array(17)].map(() => ({ args: [0.7, 0.9, 1, 0.4, 0.3][Math.floor(Math.random() * 5)], mass: .01, angularDamping: 0.2, linearDamping: 0.95 }))\n\nfunction Mushy({ vec = new THREE.Vector3(), ...props }) {\n  const { viewport } = useThree()\n\n  const texture = useTexture({\n    bumpMap: 'Moss002_1K_Displacement.jpg',\n    emissiveMap: 'Moss002_1K_Displacement.jpg',\n    clearcoatRoughnessMap: 'Moss002_1K_Displacement.jpg',\n  })\n\n  const [ref, api] = useCompoundBody(() => ({\n    ...props,\n    shapes: [\n      { type: \"Box\", position: [0, 0, -1.2 * props.args], args: new THREE.Vector3().setScalar(props.args * 0.4).toArray() },\n      { type: \"Sphere\", args: props.args },\n    ],\n  }))\n\n  const mushyOrigin = [0, -viewport.height*1, 0];\n  const originScalar = new THREE.Vector3().set(...mushyOrigin);\n  useEffect(() => api.position.subscribe((p) => api.applyForce(vec.set(...p).sub(originScalar).normalize().multiplyScalar(-props.args * .05).toArray(), [0, 0, 0])), [api])\n  \n  // const [ref, api] = useSphere(() => ({ ...props, args: [props.args], position: [0, 0, -1.2 * props.args] }))\n  // useEffect(() => api.position.subscribe((p) => api.applyForce(vec.set(...p).normalize().multiplyScalar(-props.args * 5).toArray(), [0, 0, 0])), [api])\n\n  return (\n    <mesh castShadow receiveShadow ref={ref} scale={props.args}>\n      <sphereGeometry />\n      <MeshDistortMaterial\n        distort={0.7}\n        speed={1}\n        color={\"red\"}\n        envMapIntensity={0.4}\n        clearcoat={0.9}\n        clearcoatRoughness={0}\n        transmission={0.8}\n        emissive={\"#ff737c\"}\n        sheen={1}\n        {...texture} />\n    </mesh>\n  )\n}\n\nfunction ScrollContainer({ scroll, children }) {\n  const { viewport } = useThree()\n  const group = useRef()\n  useFrame((state, delta) => {\n    group.current.position.y = THREE.MathUtils.damp(group.current.position.y, viewport.height * scroll.current, 4, delta)\n    // Or: group.current.position.lerp(vec.set(0, viewport.height * scroll.current, 0), 0.1)\n  })\n  return <group ref={group} class={\"group\"}>{children}</group>\n}\n\nfunction Plane({ color, ...props }) {\n  usePlane(() => ({ ...props }))\n  return null\n}\n\nfunction Borders() {\n  const { viewport } = useThree()\n  return (\n    <>\n      {/* <Plane position={[0, -viewport.height / 2, 0]} rotation={[-Math.PI / 2, 0, 0]} /> */}\n      {/* <Plane position={[0, 0, 0]} rotation={[Math.PI / 2, 0, 0]} /> */}\n      <Plane position={[-viewport.width / 2 - 1, 0, 0]} rotation={[0, Math.PI / 2, 0]} />\n      <Plane position={[viewport.width / 2 + 1, 0, 0]} rotation={[0, -Math.PI / 2, 0]} />\n      {/* <Plane position={[0, 0, 0]} rotation={[0, 0, 0]} /> */}\n      <Plane position={[0, 0, 1]} rotation={[0, -Math.PI, 0]} />\n    </>\n  )\n}\n\nexport default function ThreeScene(props) {\n  const scrollRef = useRef()\n  const scroll = useRef(0)\n  // const [count, setCount] = useState(0);\n\n  return (\n    <>\n      <Canvas\n      onCreated={(state) => state.events.connect(scrollRef.current)}\n      raycaster={{ computeOffsets: ({ clientX, clientY }) => ({ offsetX: clientX, offsetY: clientY }) }}\n      >\n        <Suspense fallback={null}>\n          <ambientLight intensity={0.75} />\n          <spotLight position={[20, 20, 25]} penumbra={1} angle={0.2} color=\"white\" castShadow shadow-mapSize={[512, 512]} />\n          <directionalLight position={[0, 5, -4]} intensity={1} />\n          <directionalLight position={[0, -15, -0]} intensity={2} color=\"#fcba03\" />\n          <ScrollContainer scroll={scroll}>\n            <Physics gravity={[0, 0, 0]} iterations={1} broadphase=\"SAP\">\n              {/* <Borders /> */}\n              {mushies.map((props, i) => <Mushy key={i} {...props} />)}\n              <Pointer teethCount={props.teethCount} setTeethCount={props.setTeethCount}/>\n              <BlobMouse />\n              <Header />\n            </Physics>\n          </ScrollContainer>\n          {/* <OrbitControls autoRotate enableZoom={false} enablePan={false} minPolarAngle={Math.PI / 2} maxPolarAngle={Math.PI / 2} /> */}\n        </Suspense>\n      </Canvas>\n      <div\n        ref={scrollRef}\n        onScroll={(e) => (scroll.current = e.target.scrollTop / (e.target.scrollHeight - e.target.clientHeight))}\n        className=\"scroll\">\n        <div style={{ height: `200vh`, pointerEvents: 'none' }}></div>\n      </div>\n    </>\n  )\n}\n\n// ReactDOM.render(<App />, document.getElementById('root'))","import styled from 'styled-components'\n\n\nconst Grid = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: start;\n  font-family: 'ThunderBlack';\n  font-size: 7em;\n  line-height: 0.74em;\n  color: #ff7777;\n\n  @media (max-width: 425px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Left = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-rows: 1fr auto;\n  width: 100%;\n  height: 100%;\n  padding: 100px;\n  white-space: nowrap;\n  line-height: 1em;\n  font-family: 'Ladi Gross';\n  @media (max-width: 768px) {\n    padding: 50px;\n  }\n`\n\nconst Right = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  background: #ff7777;\n  color: #252525;\n  font-family: 'Work Sans', cursive;\n  \n`\n\nconst Sub = styled.div`\n  align-self: end;\n  width: 200px;\n  height: 2px;\n  background: #ff7777;\n`\n\nconst Jumbo = styled.div`\n  align-self: center;\n  padding: 100px;\n  font-size: 3.5em;\n  color: #252525;\n`\n\nexport default function Underlay() {\n  return (\n    <Grid>\n      <Left>\n        <div>\n          WHY DO WE\n          <br />\n          HAVE SO \n          <br />\n          MANY TEETH\n          <br />\n          AND SO\n          <br />\n          LITTLE TIME\n        </div>\n        <Sub />\n      </Left>\n      <Right>\n        <Jumbo>32</Jumbo>\n      </Right>\n    </Grid>\n  )\n}\n","import { useState } from 'react'\nimport './App.css';\nimport GlobalFonts from './fonts/fonts';\nimport ThreeScene from './ThreeScene';\nimport Underlay from './Underlay';\n\nfunction App() {\n  // const [teethCount, setTeethCount] = useState(5);\n  return (\n    <div className=\"App\" onClick={() => {\n      // if(teethCount > 0 && teethCount < 10) {\n      //   setTeethCount(teethCount + 1)\n      // }\n    }}>\n      <GlobalFonts />\n      <Underlay />\n      <ThreeScene /> \n    </div>\n    // teethCount={teethCount} setTeethCount={setTeethCount}\n  );\n}\n\nexport default App;\n\n// import * as THREE from 'three'\n// import React, { useRef, useState } from 'react'\n// import ReactDOM from 'react-dom'\n// import { Canvas, useFrame, useThree } from '@react-three/fiber'\n// import { Html } from '@react-three/drei'\n// import './styles.css'\n\n// function Box({ text, color, ...props }) {\n//   const [hovered, set] = useState(false)\n//   return (\n//     <mesh {...props} onPointerOver={(e) => set(true)} onPointerOut={(e) => set(false)}>\n//       <boxGeometry args={[2, 2, 2]} />\n//       <meshStandardMaterial color={hovered ? 'hotpink' : color} />\n//       <Html position={[0, 0, 1]} className=\"label\" center>\n//         {text}\n//       </Html>\n//     </mesh>\n//   )\n// }\n\n// function ScrollContainer({ scroll, children }) {\n//   const { viewport } = useThree()\n//   const group = useRef()\n//   useFrame((state, delta) => {\n//     group.current.position.y = THREE.MathUtils.damp(group.current.position.y, viewport.height * scroll.current, 4, delta)\n//     // Or: group.current.position.lerp(vec.set(0, viewport.height * scroll.current, 0), 0.1)\n//   })\n//   return <group ref={group}>{children}</group>\n// }\n\n// function Scene() {\n//   const viewport = useThree((state) => state.viewport)\n//   return (\n//     <>\n//       <Box text={<span>This is HTML</span>} color=\"aquamarine\" />\n//       <Box text={<h1>H1 caption</h1>} color=\"lightblue\" position={[0, -viewport.height, 0]} />\n//     </>\n//   )\n// }\n\n// function App() {\n//   const scrollRef = useRef()\n//   const scroll = useRef(0)\n//   return (\n//     <>\n//       <Canvas\n//         onCreated={(state) => state.events.connect(scrollRef.current)}\n//         raycaster={{ computeOffsets: ({ clientX, clientY }) => ({ offsetX: clientX, offsetY: clientY }) }}>\n//         <ambientLight />\n//         <pointLight position={[10, 0, 10]} />\n//         <ScrollContainer scroll={scroll}>\n//           <Scene />\n//         </ScrollContainer>\n//       </Canvas>\n//       <div\n//         ref={scrollRef}\n//         onScroll={(e) => (scroll.current = e.target.scrollTop / (e.target.scrollHeight - e.target.clientHeight))}\n//         className=\"scroll\">\n//         <div style={{ height: `200vh`, pointerEvents: 'none' }}></div>\n//       </div>\n//     </>\n//   )\n// }\n\n// export default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}